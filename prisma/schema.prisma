// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// 3 Run prisma db pull to turn your database schema into a Prisma schema.
// 4 Run prisma generate to generate the Prisma Client. You can then start querying your database.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id              Int          @id @default(autoincrement())
  username        String       @unique @db.VarChar(10)
  password        String
  starSign        String?      @default("Taurus")
  favouriteAnimal String?      @default("cat")
  score           Score[]
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  ScoreSheet      ScoreSheet[]
}

model Score {
  id        Int      @id @default(autoincrement())
  userId    Int
  userName  String
  user      User     @relation(fields: [userId], references: [id])
  value     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ScoreSheet {
  id          Int          @id @default(autoincrement())
  userId      Int
  user        User         @relation(fields: [userId], references: [id])
  scoredSongs ScoredSong[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model ScoredSong {
  id           Int        @id @default(autoincrement())
  scoreSheetId Int
  scoreSheet   ScoreSheet @relation(fields: [scoreSheetId], references: [id])
  videoId      String
  songNumber   Int
  artistName   String
  songTitle    String
  decade       String
  score        Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}
